#include <iostream>
#include <opencv2/core/core.hpp>
#include <opencv2/imgproc/imgproc.hpp>
#include <opencv2/highgui/highgui.hpp>
using namespace std;
using namespace cv;

//---------------------------------全局变量声明部分-------------------------------
//描述：全局变量声明
//--------------------------------------------------------------------------------
Mat g_srcImage, g_dstImage1, g_dstImage2;
int g_nMedianBlurValue = 10;//中值滤波参数值
int g_nBilateralFilterValue = 10;//双边滤波参数值

//--------------------------------全局函数声明部分--------------------------------
//描述：全局函数声明
//--------------------------------------------------------------------------------
static void on_MedianBlur(int, void*);//中值滤波器
static void on_BilateralFilter(int, void*);//双边滤波器

//---------------------------------main()函数-------------------------------------
//描述：控制台应用程序的入口函数，我们的程序从这里开始
//--------------------------------------------------------------------------------
int main() {
	system("color 5E");

	//载入原图
	g_srcImage = imread("F:\\img_process\\imgs\\1.jpg", 1);
	if (!g_srcImage.data) {
		printf("读取srcImage错误！\n");
		return false;
	}

	//复制原图到2个Mat类型中
	g_dstImage1 = g_srcImage.clone();
	g_dstImage2 = g_srcImage.clone();

	//显示原图
	namedWindow("【<0>原图窗口】", 1);
	imshow("【<0>原图窗口】", g_srcImage);

	//------------------------------【<1>中值滤波】------------------------------
	//创建窗口
	namedWindow("【<1>中值滤波】", 1);
	createTrackbar("参数值：", "【<1>中值滤波】", &g_nMedianBlurValue, 50, on_MedianBlur);
	on_MedianBlur(g_nMedianBlurValue, 0);
	//---------------------------------------------------------------------------

	//------------------------------【<2>双边滤波】------------------------------
	//创建窗口
	namedWindow("【<2>双边滤波】", 1);
	//创建轨迹条
	createTrackbar("参数值：", "【<2>双边滤波】", &g_nBilateralFilterValue, 50, on_BilateralFilter);
	on_BilateralFilter(g_nBilateralFilterValue, 0);
	//---------------------------------------------------------------------------

	while(char(waitKey(1))!='q'){}

	return 0;
}

//---------------------------------【on_MedianBlur()函数】--------------------------
static void on_MedianBlur(int, void*)
{
	medianBlur(g_srcImage, g_dstImage1, g_nMedianBlurValue * 2 + 1);
	imshow("【<1>中值滤波】", g_dstImage1);
}

//---------------------------------【on_BilateralFilter()函数】----------------------
static void on_BilateralFilter(int, void*)
{
	bilateralFilter(g_srcImage, g_dstImage2, g_nBilateralFilterValue, g_nBilateralFilterValue * 2
		, g_nBilateralFilterValue / 2);
	imshow("【<2>双边滤波】", g_dstImage2);
}
